프로그래밍 언어는 고급 언어와 저급 언어로 나뉩니다.
고급 언어는 컴퓨터와 대화할 수 있도록 만든 언어 중에서 사람이 쉽게 이해할 수 있는 언어입니다.
고급 언어로 작성된 소스 파일은 컴파일이라는 과정을 통해 컴퓨터가 이해할 수 있는 기계어로 변환 후 컴퓨터가 사용합니다.
저급 언어란 기계어에 가까운 언어로 대표적으로 어셈블리어가 있습니다.

자바 언어의 특징
* 모든 운영체제에서 실행 가능 : 자바로 작성된 프로그램은 운영체제와 상관없이 모두 실행됩니다.
* 객체 지향 프로그래밍 : 먼저 객체(부품)을 만들고, 이 객체들을 서로 연결해서 더 큰 프로그램을 완성시키는 기법을
객체 지향 프로그래밍 기법(OOP)이라고 하며, 자바는 OOP를 위한 최적의 언어입니다.
* 메모리 자동 정리 : 자바는 메모리를 자동으로 관리합니다.
* 무료 라이브러리 풍부 :무료로 다운로드해서 사용할 수 있는 오픈 소스 라이브러리가 풍부합니다.


JDK를 설치했다면 자바 언어로 작성한 소스 파일을 만들고 컴파일할 수 있습니다.
자바 소스 파일의 확장명은 .java입니다.

소스 파일을 작성한 후에는 컴파일을 해야 합니다. javac(java compiler) 명령어는 소스 파일을 컴파일 하며,
결과는 확장명이 .class인 바이트코드 파일로 생성됩니다.


바이트코드 파일(.class)을 특정 운영체제가 이해하는 기계어로 번역하고 실행시키는 명령어는 java입니다.
java명령어는 JDK와 함께 설치된 자바 가상 머신(JVM)을 구동시켜 바이트 코드 파일을 완전환 기계어로 번역하고 실행합니다.


package ch01.sec09;	//패키지 선언 : 소스 파일 위치
public class Hello {		// 클래스 선언, Hello는 클래스명
클래스명은 숫자로 시작X, 공백 포함X, 소스 파일 명과 대소문자 완전히 일치.


주석 : 프로그램 실행과 상관없이 코드에 설명을 붙인 것입니다.
주석을 많이 작성한다고 해서 바이트 코드 파일의 크기가 커지지 않습니다.
문자열(" ") 내부에서 작성하면 안 됩니다.
행 주석 : //
범위 주석 : /* */
도큐먼트 주석 : /** */