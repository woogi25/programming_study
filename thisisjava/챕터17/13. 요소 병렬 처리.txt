요소 병렬 처리란 멀티 코어 CPU 환경에서 전체 요소를 분할해서 각각의 코어가 병렬적으로
처리하는 것을 말합니다.
요소 병렬 처리의 목적은 작업 처리 시간을 줄이는 것입니다.


동시성과 병렬성

동시성은 멀티 작업을 위해 멀티 스레드가 하나의 코어에서 번갈아가며 실행하는 것을 말합니다.
병렬성은 멀티 작업을 위해 멀티 코어를 각각 이용해서 병렬로 실행하는 것을 말합니다.
동시성은 한 시점에 하나의 작업만 실행합니다.

병렬성은 데이터 병렬성과 작업 병렬성으로 구분합니다.

데이터 병렬성
전체 데이터를 분할해서 서브 데이터셋으로 만들고 이 서브 데이터셋들을 병렬 처리해서
작업을 빨리 끝내는 것을 말합니다. 자바 병렬 스트림은 데이터 병렬성을 구현한 것입니다.

작업 병렬성
서로 다른 작업을 처리하는 것입니다. 대표적인 예로 서버 프로그램이 있습니다.

자바 병렬 스트림은 요소들을 병렬 처리하기 위해 포크조인 프레임워크를 사용합니다.
포크조인 프레임워크는 포크 단계에서 전체 요소들을 서브 요소셋으로 분할하고,
각각의 요소셋을 멀티 코어에서 병렬로 처리합니다.
조인 단계에서는 서브 결과를 결합해서 최종 결과를 만들어 냅니다.
포크 단계에서 요소를 순서대로 분할하지 않습니다.
병렬 처리를 위해 스레드풀을 사용합니다.

병렬 처리 성능

요소의 수와 요소당 처리 시간
컬렉션에 전체 요소의 수가 적고 요소당 처리 시간이 짧으면 일반 스트림이 병렬 스트림보다
빠를 수 있습니다.

스트림 소스의 종류
ArrayList와 배열은 인덱스로 요소를 관리하기 때문에 포크 단계에서 요소를 쉽게
분리할 수 있어 병렬 처리 시간이 절약되지만 HashSet, TreeSet은 요소 분리가 쉽지 않고,
LinkedList 역시 링크를 따라가야 하므로 요소 분리가 쉽지 않습니다.

코어(Core)의 수
CPU 코어의 수가 많으면 많을수록 병렬 스트림의 성능이 좋아지지만 코어의 수가
적으면 일반 스트림이 더 빠를 수 있습니다.